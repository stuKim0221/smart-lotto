name: Update Lotto Data (Ultra-Low Latency)

on:
  # 토요일 20:40 KST에 1회 시작 → 내부에서 초단위 폴링
  schedule:
    - cron: '40 11 * * 6'   # 11:40 UTC = 20:40 KST
  workflow_dispatch:

concurrency:
  group: update-lotto-data-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  update-data:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: main
        fetch-depth: 0
        persist-credentials: true

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install deps
      run: |
        pip install requests pandas

    - name: Sync with origin/main
      shell: bash
      run: |
        set -e
        git fetch origin main
        git checkout main
        git rebase origin/main || (echo "Rebase failed -> hard reset"; git reset --hard origin/main)

    - name: Poll until new round appears (~35m)
      id: poll
      shell: bash
      env:
        POLL_INTERVAL_SECS: "5"   # 5~10초 추천
        WINDOW_SECONDS: "2100"    # 약 35분
      run: |
        set -euo pipefail
        END_TS=$(( $(date -u +%s) + WINDOW_SECONDS ))
        RESULT="timeout"
        echo "Start polling every ${POLL_INTERVAL_SECS}s for ~$((WINDOW_SECONDS/60)) minutes."

        while [ "$(date -u +%s)" -lt "$END_TS" ]; do
          echo "🔎 Check @ $(date -u +'%-H:%M:%S UTC')"

          if python scripts/update_lotto_data.py; then
            if [ -n "$(git status --porcelain)" ]; then
              CURRENT_ROUND=$(python -c "import sys; sys.path.insert(0, 'scripts'); from update_lotto_data import get_latest_round; print(get_latest_round())" 2>/dev/null || echo "unknown")
              echo "New changes detected for round: ${CURRENT_ROUND}"

              git config --local user.email "github-actions[bot]@users.noreply.github.com"
              git config --local user.name "github-actions[bot]"
              git add -f app/src/main/assets/draw_kor.csv
              git commit -m "Auto-update lotto data - Round ${CURRENT_ROUND} ($(date -u +'%Y-%m-%d %H:%M UTC'))"
              git push || (git pull --rebase --autostash origin main && git push)
              RESULT="updated"
              break
            else
              echo "No changes yet (source not updated)."
            fi
          else
            echo "Script returned non-zero; retrying..."
          fi

          sleep "${POLL_INTERVAL_SECS}"
        done

        echo "result=${RESULT}" >> "$GITHUB_OUTPUT"

    - name: Summary
      if: always()
      run: |
        echo "## Update Summary" >> $GITHUB_STEP_SUMMARY
        echo "- Result: ${{ steps.poll.outputs.result }}" >> $GITHUB_STEP_SUMMARY
